# Based on https://github.com/actions-rs/example/blob/master/.github/workflows

on: [push, pull_request]

name: Checks

jobs:
  cargo-clippy:
    name: Run cargo clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["", "--all-features"]
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get install libclang-10-dev
      - run: cargo clippy ${{ matrix.features }} -- -D warnings

  # `cargo test --all-features` is handled by the coveralls job
  cargo-test:
    name: Run cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo test

  cargo-fmt:
    name: Check rustfmt formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo fmt --all -- --check

  coveralls:
    name: Run tests and upload coverage to Coveralls
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Get base ROM
        uses: actions/checkout@v3
        with:
          repository: sm64gs2pc/roms
          ssh-key: ${{ secrets.ROMS_CLONE_SSH_KEY }}
          path: roms

      - name: Move base ROM to right place
        run: mv roms/baserom.us.z64 sm64gs2pc/

      - name: Install dependencies
        run: |
          # sm64gs2pc dependencies
          sudo apt-get install libclang-10-dev
          # sm64 decomp build dependencies:
          # https://github.com/n64decomp/sm64#debian--ubuntu
          sudo apt install -y binutils-mips-linux-gnu build-essential git libcapstone-dev pkgconf python3
          # Nightly Rust for code coverage tracking
          rustup toolchain install nightly

      - name: Run cargo test --all-features and get coverage
        run: cargo +nightly test --all-features
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests
          RUSTDOCFLAGS: -Cpanic=abort

      - name: Process coverage data
        run: |
          cargo install grcov
          grcov target/debug --branch --ignore-not-existing --llvm --output-path lcov.info --output-type lcov --ignore "/*" --ignore "../*"

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
